
*Type selectors
-A type selector is sometimes referred to as a tag name selector or element selector, because it selects an HTML tag/element in
your document. In the example below we have used the span, em and strong selectors. All instances of <span>, <em> and <strong>
elements are therefore styled accordingly.
[Follow example 01]

*The universal selector
-The universal selector is indicated by an asterisk (*) and selects everything in the document (or inside the parent element
if it is being chained together with another element and a descendant combinator). In the following example we have used the
universal selector to remove the margins on all elements. This means that instead of the default styling added by the browser,
which spaces out headings and paragraphs with margins, everything is close together and we can't see the different paragraphs
easily.

*Using the universal selector to make your selectors easier to read
-One use of the universal selector is to make selectors easier to read and more obvious in terms of what they are doing.
 For example, if I wanted to select the first child of any descendant element of <article> , no matter what element it was,
 and make it bold, I could use the :first-child selector, which we will learn more about in the lesson on pseudo-classes and
pseudo-elements, as a descendant selector along with the <article> element selector:

article :first-child {
}

-This could be confused however with article:first-child, which will select any <article> element that is the first child of
another element.

-To avoid this confusion we can add the universal selector to the :first-child selector, so it is obvious what the selector
is doing. It is selecting any element which is the first-child of any descendant element of <article>:

article *:first-child {

}
-Although both do the same thing, the readability is significantly improved.



*Class selectors
-The class selector starts with a full stop (.) character and will select everything in the document with that class applied to it.
In the live example below we have created a class called .highlight, and have applied it to several places in my document. All of
the elements that have the class applied are highlighted.


*Targeting classes on particular elements
-You can create a selector that will target specific elements with the class applied. In this next example we will highlight a
<span> with a class of highlight differently to an <h1> heading with a class of highlight. We do this by using the type selector
for the element I want to target, with the class appended using a dot, with no white space in between.


*Target an element if it has more than one class applied:

-You can apply multiple classes to an element and target them individually, or only select the element when all of the classes in the
 selector are present. This can be helpful when building up components that can be combined in different ways on your site.
-In the example-05  below we have a <div> that contains a note. The grey border is applied when the box has a class of notebox. If it
also has a class of warning or danger, we change the border-color.
-We can tell the browser that we only want to match the element if it has two classes applied by chaining them together with no white
space between them. You'll see that the last <div> doesn't get any styling applied, as it only has the danger class; it needs notebox
as well to get anything applied.



*ID Selectors
-An ID selector begins with a # rather than a full stop character, but is basically used in the same way as a class selector.
An ID however can be used only once per document. It can select an element that has the id set on it, and you can precede the
ID with a type selector to only target the element if both the element and ID match. You can see both of these uses in the
following example-06:
