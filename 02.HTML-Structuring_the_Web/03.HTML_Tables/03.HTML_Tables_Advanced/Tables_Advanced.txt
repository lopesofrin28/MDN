
In the second article in this module, we look at some more advanced features of HTML tables — such as captions/summaries
and grouping your rows into table head, body and footer sections — as well as looking at the accessibility of tables for
visually impaired users.

*Adding a caption to your table with <caption>
-You can give your table a caption by putting it inside a <caption> element and nesting that inside the <table> element.
 You should put it just below the opening <table> tag.
-A caption is placed directly beneath the <table> tag.

*Adding structure with <thead>, <tfoot>, and <tbody>
-As your tables get a bit more complex in structure, it is useful to give them more structural definition.
One clear way to do this is by using <thead>, <tfoot>, and <tbody>, which allow you to mark up a header, footer, and body section
for the table.
-These elements don't make the table any more accessible to screenreader users, and don't result in any visual enhancement
on their own. They are however very useful for styling and layout — acting as useful hooks for adding CSS to your table


To use them:

-The <thead> element must wrap the part of the table that is the header — this is usually the first row containing
the column headings, but this is not necessarily always the case. If you are using <col>/<colgroup> element,
the table header should come just below those.
-The <tfoot> element needs to wrap the part of the table that is the footer — this might be a final row with items
in the previous rows summed, for example. You can include the table footer right at the bottom of the table as you'd expect,
or just below the table header (the browser will still render it at the bottom of the table).
-The <tbody> element needs to wrap the other parts of the table content that aren't in the table header or footer.
It will appear below the table header or sometimes footer, depending on how you decided to structure it.


*Nesting Tables
-It is possible to nest a table inside another one, as long as you include the complete structure, including the <table> element.
This is generally not really advised, as it makes the markup more confusing and less accessible to screenreader users,
and in many cases you might as well just insert extra cells/rows/columns into the existing table. It is however sometimes necessary,
for example if you want to import content easily from other sources.


*Tables for visually impaired users
- A table can be a handy tool, for giving us quick access to data and allowing us to look up different values.
For example, It takes only a short glance at the table below to find out how many rings were sold in Gent last August.
To understand its information we make visual associations between the data in this table and its column and/or row headers.


1]Using column and row headers
-Screenreaders will identify all headers and use them to make programmatic associations between those headers and the cells
they relate to. The combination of column and row headers will identify and interpret the data in each cell so that screenreader
users can interpret the table similarly to how a sighted user does.


2]The scope attribute
scope has two more possible values — colgroup and rowgroup. these are used for headings that sit over the top of multiple
columns or rows.

3]The id and headers attributes
-An alternative to using the scope attribute is to use id and headers attributes to create associations between headers and cells.
The way they are used is as follows:

[a]You add a unique id to each <th> element.
[b]You add a headers attribute to each <td> element. Each headers attribute has to contain a list of the ids of all the
 <th> elements that act as a header for that cell, separated by spaces.

This gives your HTML table an explicit definition of the position of each cell in the table, defined by the header(s)
for each column and row it is part of, kind of like a spreadsheet. For it to work well, the table really needs both column
and row headers.
